# kilauncher.yaml
# This is a sample configuration file for KiLauncher.py
# Edit it to fit your needs.

########################
# Global Configuration #
########################

# These values affect the whole application

# Stylesheet
# Change this to use a custom stylesheet, or change the location of your stylesheet
# Default: /etc/kilauncher/stylesheet.css

stylesheet: "stylesheet.css"

# Icon Theme
# Change the icon theme used for launcher icons when only an icon name (not path) is specified
# Probably only works in Linux, according to QT documentation
# Default: whatever your qt is configured to use

icon_theme: "Tango"

# Show Quit Button
# If you need people to be able to exit the program, set this to true
# Default: false

show_quit_button: True

# You can also set the text of the quit button
# It defaults to "X"

quit_button_text: "Quit this program"

# Turning on aggressive icon search can help find icons for badly configured .desktop files.
# It also vastly increases start time, especially on slow systems.
# Default: False

aggressive_icon_search: True


# The "autostart" feature lets you specify some commands to run whenever KiLauncher is launched.
# This could be useful if you want to run a window manager or panel, for instance.

#autostart: ["openbox", "xeyes", "xterm -e htop"]

######################
# Tabs and Launchers #
######################

# This nested structure defines tabs and the launchers contained within
# NOTE that this config may not work on your system if you don't have these programs installed.

tabs_and_launchers:
  # This is a tab called "World Wide Web"
  # It starts with a unique number.  Tabs will be sorted by key, so it will be first
  1:
    name: "Example Configuration"
    #It can have some descriptive text, which will be displayed above the launchers
    description: "This tab contains a (fairly useless) example configuration designed to show all the configuration options.
    <br/>You'll almost certainly want to edit the configuration file to put in something useful."

    #It can also have an icon, which will appear in the tab
    icon: "web-browser"
    # For this tab, create a list of launchers.
    launchers:
    # Launchers can be spelled out explicity by specifying name, comment, icon, and command
    -
      name: "Chromium Web Browser"
      comment: "Access the Internet"
      icon: "chromium-browser"
      command: "chromium-browser"

    # You can do terminal commands to, using "xterm -e"
    -
      name: "Ping Debian.org"
      comment: "Check if it's alive and well"
      icon: "/usr/share/pixmaps/debian-logo.png"
      command: "xterm -e ping www.debian.org"

    # Or send them to a URL in the system-specified browser
    -
      name: "Visit awesome website"
      comment: "The awesomest website of awesome"
      icon: "web-browser"
      command: "xdg-open http://www.alandmoore.com/blog"

    # Alternately, if you have a .desktop file for the application, specify it (and only it)
    -
      desktop_file: "/usr/share/applications/firefox.desktop"
      #but you can still override individual aspects of the file
      icon: "/usr/share/pixmaps/firefox.png"

    # Broken buttons will return an error to the user.
    -
      name: "Broken"
      comment: "This button intentionally doesn't work."
      icon: "broken"
      command: "/some/nonexistent/command/blah/foo/123124123123"

  # Here's a second tab, that will hold all programs on the system starting with 'A'
  2:
    name: "Programs that start with 'B'"
    # Note the absence of the hyphen.  This is a property of the tab itself, not part of a launchers array.
    # Also note the use of the wildcard character in the name.  That's allowed.
    # keep in mind, you have no control over the ordering if you go this route.
    desktop_path: "/usr/share/applications/b*.desktop"

    # With a desktop path, we can specify a list of categories to include
    # to include them all, make this falsey or leave it out.
    # matching is case-insensitive
    # categories: ["GTK", "Internet"]

    # Once again, a descriptive comment
    description: "These are all the programs I could find on your system that begin with the letter B."
    # Tabs can also specify
    #  - the maximum number of launchers in a row,
    #  - the size of the launchers
    #  - the size of the icons on the launcher
    # By default, launchers are 240x80, and the number is determined by the screen size.
    # Default size of icons is 64x64
    launchers_per_row: 3
    launcher_size: 360x120
    icon_size: 96x72

  # This is an example of a tab that filters on categories
  # this is kind of slow if there's a lot of .desktop files in the directory
  # but it might be convenient if startup time isn't an issue.
  3:
    name: "Multimedia Programs"
    desktop_path: "/usr/share/applications/"
    description: "These are the multimedia applications installed on your system."
    categories: ["audiovideo"]

# The system can work with large lists of programs too, though it seems to defeat the purpose (uncomment these lines to see it)

#  4:
#    name: "All your programs"
#    desktop_path: "/usr/share/applications/*.desktop"
#    icon_size: 48x48
#    launchers_per_row: 6
#    launcher_size: 180x96
